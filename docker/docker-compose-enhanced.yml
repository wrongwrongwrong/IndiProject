# Enhanced Docker Compose with Additional Services
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gameserver-postgres
    environment:
      POSTGRES_DB: gameserver_db
      POSTGRES_USER: gameserver_user
      POSTGRES_PASSWORD: secure_password_change_me
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - gameserver-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: gameserver-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gameserver-network
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password

  # pgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: gameserver-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gameserverpro.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - gameserver-network
    restart: unless-stopped
    depends_on:
      - postgres

  # Redis Commander for Redis Management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: gameserver-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379:0:redis_password
    ports:
      - "8081:8081"
    networks:
      - gameserver-network
    restart: unless-stopped
    depends_on:
      - redis

  # Prometheus for Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: gameserver-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - gameserver-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  # Grafana for Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: gameserver-grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - gameserver-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Elasticsearch for Logging
  elasticsearch:
    image: elasticsearch:7.17.0
    container_name: gameserver-elasticsearch
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - gameserver-network
    restart: unless-stopped

  # Kibana for Log Visualization
  kibana:
    image: kibana:7.17.0
    container_name: gameserver-kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - gameserver-network
    restart: unless-stopped
    depends_on:
      - elasticsearch

  # Main Application (API Gateway)
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gameserver-api-gateway
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://gameserver_user:secure_password_change_me@postgres:5432/gameserver_db
      REDIS_URL: redis://:redis_password@redis:6379
      JWT_SECRET: your_jwt_secret_key_here
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    networks:
      - gameserver-network
    restart: unless-stopped
    command: node local-server.js

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  gameserver-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
